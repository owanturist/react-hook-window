name: E2E Tests with Cypress

on: push

jobs:
  install:
    runs-on: ubuntu-latest
    container: cypress/browsers:node12.18.3-chrome87-ff82
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: yarn --frozen-lockfile --silent

      - name: Save build folder
        uses: actions/upload-artifact@v2
        with:
          name: sandbox
          if-no-files-found: error
          path: sandbox/dist

      - name: Cypress install
        uses: cypress-io/github-action@v2
        with:
          # Disable running of tests within install job
          runTests: false
          build: yarn build && yarn sandbox:build

  cypress-run:
    runs-on: ubuntu-latest
    container: cypress/browsers:node12.18.3-chrome87-ff82
    needs: install
    strategy:
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download the build folders
        uses: actions/download-artifact@v2
        with:
          name: sandbox
          path: sandbox/dist

      - name: 'UI Tests - Chrome'
        uses: cypress-io/github-action@v2
        with:
          # we have already installed all dependencies above
          install: false
          start: npx serve -s sandbox/dist -p 3000
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: true
          group: 'UI - Chrome'
          working-directory: e2e
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Cypress run
      #   uses: cypress-io/github-action@v2
      #   with:
      #     install: false
      #     start: yarn workspace sandbox dev
      #     working-directory: e2e
      #     browser: chrome
      #     wait-on: 'http://localhost:1234'
      #     wait-on-timeout: 120
